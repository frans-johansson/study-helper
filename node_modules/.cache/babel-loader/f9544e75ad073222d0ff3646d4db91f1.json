{"ast":null,"code":"import _defineProperty from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Marit/Desktop/projekt/study-helper/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Marit/Desktop/projekt/study-helper/src/MountainDataManager.js\";\nimport React, { Component } from 'react';\nimport MountainData from './MountainData.js';\n\nvar MountainForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MountainForm, _Component);\n\n  function MountainForm() {\n    _classCallCheck(this, MountainForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MountainForm).apply(this, arguments));\n  }\n\n  _createClass(MountainForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.onSubmit,\n        method: \"get\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), \"Goal:\", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"goal\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }), \"End date:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \"Color:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"color\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MountainForm;\n}(Component); // Detta är copypastat från reactjs.org\n// Och sedan lite redigerat\n\n\nvar MountainDeclaration =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(MountainDeclaration, _Component2);\n\n  function MountainDeclaration(props) {\n    var _this;\n\n    _classCallCheck(this, MountainDeclaration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MountainDeclaration).call(this, props));\n    _this.state = {\n      name: '',\n      goal: 0,\n      date: '',\n      color: '',\n      //Hur gör vi detta?\n      studied: 0\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Updates state with entered data\n\n\n  _createClass(MountainDeclaration, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    } // Sends data away into storage (woosh)\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this$state = this.state,\n          name = _this$state.name,\n          goal = _this$state.goal,\n          date = _this$state.date,\n          color = _this$state.color; // Try to get the array from local storage. If it's not there, create an empty array.\n\n      var mountains = JSON.parse(window.localStorage.getItem(\"mountains\"));\n      if (!mountains) mountains = []; // Create a new mountain object and place it at the end of the array\n\n      var newMountain = new MountainData(name, goal, date, color, Date.now());\n      mountains.push(newMountain); // Updates the array in local storage\n\n      window.localStorage.setItem(\"mountains\", JSON.stringify(mountains)); // Updates the app state with the new mountain\n\n      this.props.updateMountainList();\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Nytt Berg\"), React.createElement(MountainForm, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MountainDeclaration;\n}(Component);\n\nexport default MountainDeclaration; // Bra idé: CurrentKey ligger i local storage och kan hämtas därifrån varje gång","map":{"version":3,"sources":["/Users/Marit/Desktop/projekt/study-helper/src/MountainDataManager.js"],"names":["React","Component","MountainData","MountainForm","props","onSubmit","onChange","MountainDeclaration","state","name","goal","date","color","studied","handleChange","bind","handleSubmit","event","setState","target","value","mountains","JSON","parse","window","localStorage","getItem","newMountain","Date","now","push","setItem","stringify","updateMountainList","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MountainData from './MountainData.js'\n\nclass MountainForm extends Component {\n  render() {\n    return(\n        <form onSubmit={this.props.onSubmit} method=\"get\">\n          <label>\n            Name:\n            <input type=\"text\" name=\"name\" onChange={this.props.onChange} />\n            Goal:\n            <input type=\"number\" name=\"goal\" onChange={this.props.onChange} />\n            End date:\n            <input type=\"text\" name=\"date\" onChange={this.props.onChange} />\n            Color:\n            <input type=\"text\" name=\"color\" onChange={this.props.onChange} />\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n    )\n  }\n}\n\n// Detta är copypastat från reactjs.org\n// Och sedan lite redigerat\nclass MountainDeclaration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      goal: 0,\n      date: '',\n      color: '', //Hur gör vi detta?\n      studied: 0,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Updates state with entered data\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  // Sends data away into storage (woosh)\n  handleSubmit(event) {\n    let {name, goal, date, color} = this.state\n\n    // Try to get the array from local storage. If it's not there, create an empty array.\n    let mountains = JSON.parse(window.localStorage.getItem(\"mountains\"))\n    if (!mountains)\n      mountains = []\n\n    // Create a new mountain object and place it at the end of the array\n    let newMountain = new MountainData(name, goal, date, color, Date.now())\n    mountains.push(newMountain)\n\n    // Updates the array in local storage\n    window.localStorage.setItem(\"mountains\", JSON.stringify(mountains));\n\n    // Updates the app state with the new mountain\n    this.props.updateMountainList()\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Nytt Berg</h1>\n        <MountainForm onChange={this.handleChange} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\n\n\nexport default MountainDeclaration\n\n// Bra idé: CurrentKey ligger i local storage och kan hämtas därifrån varje gång"]},"metadata":{},"sourceType":"module"}